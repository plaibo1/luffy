{"version":3,"sources":["components/LoginPage/Login.jsx"],"names":["LoginWithReduxForm","reduxForm","form","props","handleSubmit","onSubmit","name","component","Input","type","placeholder","validate","required","className","s","rememberMe","value","error","errorBox","connect","state","isAuth","auth","isAuthorized","login","logout","to","formData","password"],"mappings":"gGAAA,6FA0CMA,EAAqBC,YAAU,CACnCC,KAAM,SADmBD,EAlCT,SAACE,GAEjB,IAAOC,EAAgBD,EAAhBC,aAEP,OACE,uBAAMC,SAAUD,EAAhB,UACE,cAAC,IAAD,CACME,KAAK,OACLC,UAAWC,IACXC,KAAK,OACLC,YAAY,YACZC,SAAU,CAACC,OAEjB,cAAC,IAAD,CACMN,KAAK,WACLC,UAAWC,IACXC,KAAK,WACLC,YAAY,WACZC,SAAU,CAACC,OAEjB,wBAAOC,UAAWC,IAAEC,WAApB,UACM,cAAC,IAAD,CAAOT,KAAK,aAAaC,UAAU,QAAQE,KAAK,WAAWO,MAAM,UAAW,iBAGlF,wBAAQH,UAAWC,IAAE,mBAArB,mBAECX,EAAMc,OAAS,qBAAKJ,UAAWC,IAAEI,SAAlB,SACbf,EAAMc,cAiCAE,uBAJF,SAACC,GAAD,MAAY,CACvBC,OAAQD,EAAME,KAAKC,gBAGQ,CAACC,UAAOC,YAAtBN,EAtBD,SAAChB,GAMb,OAAGA,EAAMkB,OACA,cAAC,IAAD,CAAUK,GAAG,UAIpB,gCACE,uCACA,cAAC1B,EAAD,CAAoBK,SAXP,SAACsB,GAChBxB,EAAMqB,MAAMG,EAASrB,KAAMqB,EAASC,SAAUD,EAASZ","file":"static/js/5.27ed243c.chunk.js","sourcesContent":["import { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {required } from '../../utils/validators/validator';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport {login, logout} from '../../Redux/auth-reducer'\r\nimport { Redirect } from 'react-router-dom';\r\nimport s from '../common/FormsControls/formControls.module.sass'\r\n\r\nconst LoginForm = (props) => {\r\n\r\n  const {handleSubmit} = props;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} > \r\n      <Field\r\n            name=\"name\"\r\n            component={Input}\r\n            type=\"text\"\r\n            placeholder=\"Your name\"\r\n            validate={[required]}\r\n          />\r\n      <Field\r\n            name=\"password\"\r\n            component={Input}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            validate={[required]}\r\n          />\r\n      <label className={s.rememberMe}>\r\n            <Field name=\"rememberMe\" component=\"input\" type=\"checkbox\" value=\"false\" />{'Remember me'}\r\n      </label>\r\n\r\n      <button className={s['btn-loginSubmit']}>Login</button>\r\n\r\n      {props.error && <div className={s.errorBox}>\r\n        {props.error}\r\n      </div>}\r\n\r\n    </form>\r\n  )\r\n}\r\n\r\nconst LoginWithReduxForm = reduxForm({\r\n  form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.name, formData.password, formData.rememberMe)\r\n  }\r\n\r\n  if(props.isAuth) {\r\n    return <Redirect to='/home' />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginWithReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mstp = (state) => ({\r\n  isAuth: state.auth.isAuthorized\r\n})\r\n\r\nexport default connect(mstp, {login, logout})(Login);"],"sourceRoot":""}